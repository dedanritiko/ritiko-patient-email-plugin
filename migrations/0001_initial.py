# Generated by Django 5.0.14 on 2025-08-27 16:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0219_organization_plugin_settings"),
        ("patients", "0298_event_last_modified_by"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Template name for reference",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Email subject line (can include template variables)",
                        max_length=200,
                    ),
                ),
                (
                    "html_content",
                    models.TextField(
                        help_text="HTML email content (can include template variables)"
                    ),
                ),
                (
                    "text_content",
                    models.TextField(
                        blank=True,
                        help_text="Plain text email content (optional, will be auto-generated from HTML if not provided)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this template is active and can be used",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this template is used for",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Template",
                "verbose_name_plural": "Email Templates",
                "db_table": "patient_email_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PatientEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Patient's primary email address",
                        max_length=254,
                        null=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "secondary_email",
                    models.EmailField(
                        blank=True,
                        help_text="Patient's secondary email address (optional)",
                        max_length=254,
                        null=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="Secondary Email",
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the primary email has been verified",
                    ),
                ),
                (
                    "email_notifications_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether patient wants to receive email notifications",
                    ),
                ),
                (
                    "preferred_email",
                    models.CharField(
                        choices=[
                            ("primary", "Primary Email"),
                            ("secondary", "Secondary Email"),
                        ],
                        default="primary",
                        help_text="Which email address to use for notifications",
                        max_length=10,
                    ),
                ),
                (
                    "email_bounced",
                    models.BooleanField(
                        default=False,
                        help_text="Whether emails to this patient have bounced",
                    ),
                ),
                (
                    "last_email_sent",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the last email was sent to this patient",
                        null=True,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.organization",
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        help_text="Patient this email profile belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_profile",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient Email Profile",
                "verbose_name_plural": "Patient Email Profiles",
                "db_table": "patient_email_profiles",
            },
        ),
    ]
